// qsgsimpletexturenode.sip generated by MetaSIP
//
// This file is part of the QtQuick Python extension module.
//
// Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QSGSimpleTextureNode : QSGGeometryNode /NoDefaultCtors/
{
%TypeHeaderCode
#include <qsgsimpletexturenode.h>
%End

public:
    QSGSimpleTextureNode();
    virtual ~QSGSimpleTextureNode();
    void setRect(const QRectF &rect);
    void setRect(qreal x, qreal y, qreal w, qreal h);
    QRectF rect() const;
    void setTexture(QSGTexture *texture);
    QSGTexture *texture() const;
    void setFiltering(QSGTexture::Filtering filtering);
    QSGTexture::Filtering filtering() const;

    enum TextureCoordinatesTransformFlag /BaseType=Flag/
    {
        NoTransform,
        MirrorHorizontally,
        MirrorVertically,
    };

    typedef QFlags<QSGSimpleTextureNode::TextureCoordinatesTransformFlag> TextureCoordinatesTransformMode;
    void setTextureCoordinatesTransform(QSGSimpleTextureNode::TextureCoordinatesTransformMode mode);
    QSGSimpleTextureNode::TextureCoordinatesTransformMode textureCoordinatesTransform() const;
    void setOwnsTexture(bool owns);
    bool ownsTexture() const;
    void setSourceRect(const QRectF &r);
    void setSourceRect(qreal x, qreal y, qreal w, qreal h);
    QRectF sourceRect() const;
};
