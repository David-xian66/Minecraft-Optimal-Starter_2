// qaudioinput.sip generated by MetaSIP
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_6_2_0 -)

class QAudioInput : QObject
{
%TypeHeaderCode
#include <qaudioinput.h>
%End

public:
    QAudioInput(const QAudioDevice &deviceInfo, QObject *parent /TransferThis/ = 0);
    explicit QAudioInput(QObject *parent /TransferThis/ = 0);
    virtual ~QAudioInput();
    QAudioDevice device() const;
    float volume() const;
    bool isMuted() const;

public slots:
    void setDevice(const QAudioDevice &device);
    void setMuted(bool muted);
    void setVolume(float volume);

signals:
    void deviceChanged();
    void volumeChanged(float volume);
    void mutedChanged(bool muted);
};

%End
