// qsoundeffect.sip generated by MetaSIP
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2022 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_6_2_0 -)

class QSoundEffect : QObject
{
%TypeHeaderCode
#include <qsoundeffect.h>
%End

public:
    enum Loop
    {
        Infinite,
    };

    enum Status
    {
        Null,
        Loading,
        Ready,
        Error,
    };

    QSoundEffect(const QAudioDevice &audioDevice, QObject *parent /TransferThis/ = 0);
    explicit QSoundEffect(QObject *parent /TransferThis/ = 0);
    virtual ~QSoundEffect();
    static QStringList supportedMimeTypes();
    QAudioDevice audioDevice();
    void setAudioDevice(const QAudioDevice &device);
    QUrl source() const;
    void setSource(const QUrl &url);
    int loopCount() const;
    int loopsRemaining() const;
    void setLoopCount(int loopCount);
    float volume() const;
    void setVolume(float volume);
    bool isMuted() const;
    void setMuted(bool muted);
    bool isLoaded() const;
    bool isPlaying() const;
    QSoundEffect::Status status() const;

public slots:
    void play();
    void stop();

signals:
    void audioDeviceChanged();
    void sourceChanged();
    void loopCountChanged();
    void loopsRemainingChanged();
    void volumeChanged();
    void mutedChanged();
    void loadedChanged();
    void playingChanged();
    void statusChanged();
};

%End
